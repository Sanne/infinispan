<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source
  ~ Copyright 2012 Red Hat Inc. and/or its affiliates and other
  ~ contributors as indicated by the @author tags. All rights reserved.
  ~ See the copyright.txt in the distribution for a full listing of
  ~ individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.infinispan</groupId>
   <parent>
        <artifactId>jboss-parent</artifactId>
        <groupId>org.jboss</groupId>
        <version>9-redhat-1</version>
    </parent>
   <artifactId>infinispan-parent</artifactId>
   <version>5.1.8.Final-redhat-1</version>
   <packaging>pom</packaging>
   <name>Infinispan Common Parent</name>
   <description>Infinispan common parent POM module</description>
   <licenses>
      <license>
         <name>GNU Lesser General Public License</name>
         <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
         <distribution>repo</distribution>
      </license>
   </licenses>
   <properties>
      <buildDirectory>target</buildDirectory>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <defaultTestGroup>functional,unit</defaultTestGroup>
      <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener</testNGListener>
      <infinispan.test.parallel.threads>20</infinispan.test.parallel.threads>
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
      <packaging>jar</packaging>
      <module.skipComponentMetaDataProcessing>true</module.skipComponentMetaDataProcessing>
      <module.metadata.isCoreModule>false</module.metadata.isCoreModule>
      <!-- Versions for dependencies -->
   </properties>
   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.jboss.component.management</groupId>
            <artifactId>jboss-dependency-management-all</artifactId>
            <version>6.0.1-redhat-1</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.component.management</groupId>
            <artifactId>jboss-project-dependency-relocations</artifactId>
            <version>6.0.1-redhat-1</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
      </dependencies>
   </dependencyManagement>
   <dependencies>
      <!-- used to serialize non-serializable objects for a dummy marshaller -->
      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>net.jcip</groupId>
         <artifactId>jcip-annotations</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging-processor</artifactId>
         <scope>provided</scope>
      </dependency>
      <!-- As of v3.0.4, the RHQ annotations have a retention policy of COMPILE,
           which means they are no longer required at runtime. However, 
           because of a Sun compiler bug http://bugs.sun.com/view_bug.do?bug_id=6550655
           it still needs to be present when using the Infinispan artifacts. This
           doesn't happen when using Java 7. Please add exclusions accordingly
           if you don't want to pull this in -->
      <dependency>
         <groupId>org.rhq.helpers</groupId>
         <artifactId>rhq-pluginAnnotations</artifactId>
         <exclusions>
            <exclusion>
               <artifactId>i18nlog</artifactId>
               <groupId>i18nlog</groupId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <directory>${buildDirectory}</directory>
      <finalName>${project.artifactId}</finalName>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-pmd-plugin</artifactId>
               <configuration>
                        <minimumTokens>100</minimumTokens>
                        <targetJdk>1.6</targetJdk>
                        <linkXref>false</linkXref>
                        <sourceEncoding>utf-8</sourceEncoding>
                    </configuration>
            </plugin>
            <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-war-plugin</artifactId>
                  <configuration>
                        <attachClasses>true</attachClasses>
                    </configuration>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.0,)</versionRange>
                                        <goals>
                                            <goal>copy</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-javadoc-plugin</artifactId>
                                        <versionRange>[2.8,)</versionRange>
                                        <goals>
                                            <goal>javadoc</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.7,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>exec-maven-plugin</artifactId>
                                        <versionRange>[1.2.1,)</versionRange>
                                        <goals>
                                            <goal>java</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.scala-tools</groupId>
                                        <artifactId>maven-scala-plugin</artifactId>
                                        <versionRange>[2.15.2,)</versionRange>
                                        <goals>
                                            <goal>testCompile</goal>
                                            <goal>compile</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>ideauidesigner-maven-plugin</artifactId>
                                        <versionRange>[1.0-beta-1,)</versionRange>
                                        <goals>
                                            <goal>javac2</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
            </plugin>
            <plugin>
               <groupId>org.scala-tools</groupId>
               <artifactId>maven-scala-plugin</artifactId>
               <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
               <configuration>
                        <scalaVersion>${version.scala}</scalaVersion>
                    </configuration>
            </plugin>
            
            
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            
            
            
            
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
               <instructions>
                  <Bundle-DocURL>http://www.infinispan.org/</Bundle-DocURL>
                  <Export-Package>${project.groupId}.*;version=${project.version};-split-package:=error</Export-Package>
               </instructions>
            </configuration>
         </plugin>
         <!-- Copy the resulting persisted metadata into the build directory for packaging into the jar -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7-redhat-1</version>
            <executions>
               <execution>
                  <id>copy_serialized_metadata</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <tasks>
                        <copy file="${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat" todir="${project.build.outputDirectory}" />
                     </tasks>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- by default, compile to JDK 1.6 compatibility (individual modules and/or user can override) -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
               <compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files</compilerArgument>
            </configuration>
         </plugin>
         <!-- eclipse project file generation -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
               <downloadSources>true</downloadSources>
               <buildOutputDirectory>${basedir}/eclipse-output</buildOutputDirectory>
            </configuration>
         </plugin>
         <!-- IntelliJ project file generation -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-idea-plugin</artifactId>
            <configuration>
               <downloadSources>true</downloadSources>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <id>build-test-jar</id>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                           <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                     </archive>
                     <excludes>
                        <excludes>**/jbossts-properties.xml</excludes>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.Version</mainClass>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/log4j.xml</exclude>
                  <exclude>**/*.bat</exclude>
                  <exclude>**/*.sh</exclude>
                  <exclude>**/*.txt</exclude>
               </excludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>tests</parallel>
               <threadCount>${infinispan.test.parallel.threads}</threadCount>
               <forkMode>none</forkMode>
               <groups>${defaultTestGroup}</groups>
               <systemProperties>
                        <property>
                            <name>infinispan.test.jgroups.protocol</name>
                            <value>${infinispan.test.jgroups.protocol}</value>
                        </property>
                        <property>
                            <name>jgroups.bind_addr</name>
                            <value>127.0.0.1</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv4Stack</name>
                            <value>true</value>
                        </property>
                    </systemProperties>
               <trimStackTrace>false</trimStackTrace>
               <properties>
                        <property>
                            <name>listener</name>
                            <value>${testNGListener}</value>
                        </property>
                    </properties>
               <argLine>-Xmx1024m -XX:MaxPermSize=1024m</argLine>
               
            </configuration>
         </plugin>
         <!-- ensure parallel test execution -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
                    <execution>
                        <id>serialize_component_metadata</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>${module.skipComponentMetaDataProcessing}</skip>
                            <mainClass>org.infinispan.factories.components.ComponentMetadataPersister</mainClass>
                            <arguments>
                                <argument>${project.build.outputDirectory}</argument>
                                <argument>${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat</argument>
                            </arguments>
                            <systemProperties>
                                <systemProperty>
                                    <key>infinispan.isCoreModule</key>
                                    <value>${module.metadata.isCoreModule}</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
         </plugin>
         <!-- Scan module for components and persist these into a data file, for use at runtime -->
         
      </plugins>
   </build>
   <profiles>
      <profile>
         <id>extras</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <!-- enforce java 1.6 and maven 2.1.0 -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-enforcer-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>enforce-java</id>
                        <goals>
                           <goal>enforce</goal>
                        </goals>
                        <configuration>
                           <rules>
                              <requireJavaVersion>
                                 <version>[1.6,)</version>
                              </requireJavaVersion>
                              <requireMavenVersion>
                                 <version>[2.1.0,)</version>
                              </requireMavenVersion>
                           </rules>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <!-- Make sure we generate src jars too -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-source-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>attach-sources</id>
                        <goals>
                           <goal>jar</goal>
                        </goals>
                     </execution>
                  </executions>
                  <inherited>true</inherited>
               </plugin>
            </plugins>
         </build>
         <properties>
            <!-- By default create OSGI bundles -->
            <packaging>bundle</packaging>
         </properties>
      </profile>
      <profile>
         <id>test-hudson</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <defaultTestGroup>functional,unit</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-functional</id>
         <properties>
            <defaultTestGroup>functional</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-unit</id>
         <properties>
            <defaultTestGroup>unit</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-jgroups</id>
         <properties>
            <defaultTestGroup>jgroups</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-transaction</id>
         <properties>
            <defaultTestGroup>transaction</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>debug-tests</id>
         <properties>
            <testNGListener>org.infinispan.test.fwk.DebuggingUnitTestNGListener</testNGListener>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <!-- we are still likely compatible with the 2.9.x Lucene version: test for that -->
         <id>useOlderLuceneVersion</id>
         <activation>
         </activation>
         <properties>
            <version.lucene>2.9.4</version.lucene>
         </properties>
      </profile>
      <profile>
         <id>nonParallel</id>
         <activation>
         </activation>
         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>traceTests</id>
         <activation>
         </activation>
         <build>
            <plugins>
               <!-- Redefine surefire plugin to avoid external log4j settings
               not being discovered when passed as command line arguments -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.4.3-JBOSS</version>
                  <configuration>
                     <parallel>tests</parallel>
                     <threadCount>${infinispan.test.parallel.threads}</threadCount>
                     <forkMode>none</forkMode>
                     <groups>${defaultTestGroup}</groups>
                     <systemProperties>
                        <property>
                           <name>infinispan.test.jgroups.protocol</name>
                           <value>${infinispan.test.jgroups.protocol}</value>
                        </property>
                        <property>
                           <name>jgroups.bind_addr</name>
                           <value>127.0.0.1</value>
                        </property>
                        <property>
                           <name>java.net.preferIPv4Stack</name>
                           <value>true</value>
                        </property>
                        <property>
                           <name>log4j.configuration</name>
                           <value>log4j-trace.xml</value>
                        </property>
                     </systemProperties>
                     <trimStackTrace>false</trimStackTrace>
                     <properties>
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                     <argLine>-Xmx1024m -XX:MaxPermSize=1024m</argLine>
                  </configuration>
               </plugin>
            </plugins>
         </build>
         <properties>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
   </profiles>
</project>
